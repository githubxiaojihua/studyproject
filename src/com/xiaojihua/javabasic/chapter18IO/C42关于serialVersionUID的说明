关于serialVersionUID的说明：
每一个序列化类再进行序列化的时候都会有一个与之相关联的version number（serialVersionUID）,
主要用于在进行反序列化的时候对序列化时候的类(sender)和反序列化时候的类(receiver)进行验证，
看是一致，如果不一致那就会报InvalidClassException。
serialVersionUID的值JVM会进行计算，但是不同的虚似机实现与不同操作系统平台之间的不同会影
响到计算的结果，这样就会造成，同样一个类在不同的平台上和虚似机上serialVersionUID不同，
不能进行正常的反序列化。
因此JDK中也是强烈建议手工指定此值，
格式为：private static final long serialVersionUID = 42l

原文看JDK中的java.io.Serializable说明 ：
The serialization runtime associates with each serializable class a version number,
called a serialVersionUID, which is used during deserialization to verify that the
sender and receiver of a serialized object have loaded classes for that object that
are compatible with respect to serialization. If the receiver has loaded a class
for the object that has a different serialVersionUID than that of the corresponding
sender's class, then deserialization will result in an InvalidClassException.
A serializable class can declare its own serialVersionUID explicitly by declaring
a field named "serialVersionUID" that must be static, final, and of type long:

 ANY-ACCESS-MODIFIER static final long serialVersionUID = 42L;

If a serializable class does not explicitly declare a serialVersionUID, then the
serialization runtime will calculate a default serialVersionUID value for that
class based on various aspects of the class, as described in the Java(TM) Object
Serialization Specification. However, it is strongly recommended that all serializable
classes explicitly declare serialVersionUID values, since the default serialVersionUID
computation is highly sensitive to class details that may vary depending on compiler
implementations, and can thus result in unexpected InvalidClassExceptions during
deserialization. Therefore, to guarantee a consistent serialVersionUID value across
different java compiler implementations, a serializable class must declare an explicit
serialVersionUID value. It is also strongly advised that explicit serialVersionUID
declarations use the private modifier where possible, since such declarations apply
only to the immediately declaring class--serialVersionUID fields are not useful as
inherited members. Array classes cannot declare an explicit serialVersionUID, so they
always have the default computed value, but the requirement for matching serialVersionUID
values is waived for array classes.

